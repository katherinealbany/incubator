###################################################################################################

kind: StatefulSet
apiVersion: "{{ .Values.apiVersionStatefulSet }}"
metadata:
  name: "{{ template "elasticsearchMasterName" . }}"
  namespace: "{{ template "elasticsearchNamespace" . }}"
  labels:
    name: "{{ template "elasticsearchMasterName" . }}"
    chart: "{{ template "elasticsearchChart" . }}"
    release: "{{ template "elasticsearchRelease" . }}"
    heritage: "{{ template "elasticsearchHeritage" . }}"
    node.data: "{{ .Values.masterConfigNodeData }}"
    node.ingest: "{{ .Values.masterConfigNodeIngest }}"
    node.master: "{{ .Values.masterConfigNodeMaster }}"
  annotations:
    config.sha256sum: "{{ include (print .Template.BasePath "/master-config-map.yaml") . | sha256sum }}"
spec:
  selector:
    matchLabels:
      name: "{{ template "elasticsearchMasterName" . }}"
  replicas: {{ .Values.masterReplicas }}
  serviceName: "{{ template "elasticsearchClusterName" . }}"
  {{- if .Values.masterVolumeEnabled }}
  volumeClaimTemplates:
    - metadata:
        name: "{{ .Values.masterVolumeName }}"
        annotations:
          volume.alpha.kubernetes.io/storage-class: "{{ .Values.masterVolumeClass }}"
      spec:
        resources:
          requests:
            storage: "{{ .Values.masterVolumeSize }}"
        accessModes: [ "{{ .Values.masterVolumeMode }}" ]
  {{- end }}
  template:
    metadata:
      labels:
        name: "{{ template "elasticsearchMasterName" . }}"
        chart: "{{ template "elasticsearchChart" . }}"
        release: "{{ template "elasticsearchRelease" . }}"
        heritage: "{{ template "elasticsearchHeritage" . }}"
        node.data: "{{ .Values.masterConfigNodeData }}"
        node.ingest: "{{ .Values.masterConfigNodeIngest }}"
        node.master: "{{ .Values.masterConfigNodeMaster }}"
        {{- if .Values.masterPodLabels }}
{{ toYaml .Values.masterPodLabels | indent 8 }}
        {{- end }}
      {{- if .Values.masterPodAnnotations }}
      annotations:
{{ toYaml .Values.masterPodAnnotations | indent 8 }}
      {{- end }}
    spec:
      affinity:
        podAntiAffinity:
          {{- if eq (.Values.masterPodAntiAffinity | lower) "required" }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "{{ .Values.masterPodAntiAffinityTopologyKey }}"
              labelSelector:
                matchExpressions:
                  - key: name
                    values: [ "{{ template "elasticsearchMasterName" . }}" ]
                    operator: In
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: {{ .Values.masterPodAntiAffinityWeight }}
              podAffinityTerm:
                topologyKey: "{{ .Values.masterPodAntiAffinityTopologyKey }}"
                labelSelector:
                  matchExpressions:
                    - key: name
                      values: [ "{{ template "elasticsearchMasterName" . }}" ]
                      operator: In
          {{- end }}
      {{- if or (ge (default 0 (.Values.clusterFsGroup | int)) 0) (ge (default 0 (.Values.clusterRunAsUser | int)) 0) }}
      securityContext:
        {{- if ge (default 0 (.Values.clusterFsGroup | int)) 0 }}
        fsGroup: {{ .Values.clusterFsGroup }}
        {{- end }}
        {{- if ge (default 0 (.Values.clusterRunAsUser | int)) 0 }}
        runAsUser: {{ .Values.clusterRunAsUser }}
        {{- end }}
      {{- end }}
      {{- if .Values.masterPodNodeSelector }}
      nodeSelector:
{{ toYaml .Values.masterPodNodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.masterPodTolerations }}
      tolerations:
{{ toYaml .Values.masterPodTolerations | indent 8 }}
      {{- end }}
      volumes:
        - name: "{{ .Values.configWord }}"
          configMap:
            name: "{{ template "elasticsearchMasterName" . }}"
        {{- if not .Values.masterVolumeEnabled }}
        - name: "{{ .Values.masterVolumeName }}"
          emptyDir: {}
        {{- end }}
      {{- if .Values.masterPodVolumes }}
{{ toYaml .Values.masterPodVolumes | indent 8 }}
      {{- end }}
      initContainers:
        - name: init
          image: "{{ template "elasticsearchClusterImage" . }}"
          imagePullPolicy: "{{ .Values.clusterImagePullPolicy }}"
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: {{ .Values.masterAllowPrivilegeEscalation }}
          command:
            - /bin/bash
            - -c
            - mkdir -pv {{ template "elasticsearchMasterDataBase" . }} &&
              mkdir -pv {{ template "elasticsearchMasterLogsBase" . }} &&
              chown -cR {{ .Values.clusterRunAsUser }}:{{ .Values.clusterFsGroup }} {{ template "elasticsearchMasterDataBase" . }} &&
              chown -cR {{ .Values.clusterRunAsUser }}:{{ .Values.clusterFsGroup }} {{ template "elasticsearchMasterLogsBase" . }}
          volumeMounts:
            - name: "{{ .Values.masterVolumeName }}"
              mountPath: "{{ .Values.masterVolumeMountBase }}"
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ template "elasticsearchClusterImage" . }}"
          imagePullPolicy: "{{ .Values.clusterImagePullPolicy }}"
          securityContext:
            allowPrivilegeEscalation: {{ .Values.masterAllowPrivilegeEscalation }}
          env:
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: "{{ .Values.httpWord }}"
              containerPort: {{ .Values.clusterHttpPort }}
            - name: "{{ .Values.clusterWord }}"
              containerPort: {{ .Values.clusterTransportPort }}
          {{- if or .Values.masterCpu .Values.masterCpuMinimum .Values.masterCpuMaximum .Values.masterMemory .Values.masterMemoryMinimum .Values.masterMemoryMaximum }}
          resources:
            {{- if or .Values.masterCpu .Values.masterCpuMinimum .Values.masterMemory .Values.masterMemoryMinimum }}
            requests:
              {{- if or .Values.masterCpu .Values.masterCpuMinimum }}
              cpu: "{{ if .Values.masterCpu }}{{ .Values.masterCpu }}{{ else }}{{ .Values.masterCpuMinimum }}{{ end }}"
              {{- end }}
              {{- if or .Values.masterMemory .Values.masterMemoryMinimum }}
              memory: "{{ if .Values.masterMemory }}{{ .Values.masterMemory }}{{ else }}{{ .Values.masterMemoryMinimum }}{{ end }}"
              {{- end }}
            {{- end }}
            {{- if or .Values.masterCpu .Values.masterCpuMaximum .Values.masterMemory .Values.masterMemoryMaximum }}
            limits:
              {{- if or .Values.masterCpu .Values.masterCpuMaximum }}
              cpu: "{{ if .Values.masterCpu }}{{ .Values.masterCpu }}{{ else }}{{ .Values.masterCpuMaximum }}{{ end }}"
              {{- end }}
              {{- if or .Values.masterMemory .Values.masterMemoryMaximum }}
              memory: "{{ if .Values.masterMemory }}{{ .Values.masterMemory }}{{ else }}{{ .Values.masterMemoryMaximum }}{{ end }}"
              {{- end }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: "{{ .Values.configWord }}"
              subPath: "{{ .Values.clusterJvmFile }}"
              mountPath: "{{ template "elasticsearchClusterConfigMountBase" . }}/{{ .Values.clusterJvmFile }}"
            - name: "{{ .Values.configWord }}"
              subPath: "{{ .Values.clusterLog4jFile }}"
              mountPath: "{{ template "elasticsearchClusterConfigMountBase" . }}/{{ .Values.clusterLog4jFile }}"
            - name: "{{ .Values.configWord }}"
              subPath: "{{ .Values.clusterConfigFile }}"
              mountPath: "{{ template "elasticsearchClusterConfigMountBase" . }}/{{ .Values.clusterConfigFile }}"
            - name: "{{ .Values.masterVolumeName }}"
              mountPath: "{{ .Values.masterVolumeMountBase }}"
          {{- if .Values.masterPodVolumeMounts }}
{{ toYaml .Values.masterPodVolumeMounts | indent 12 }}
          {{- end }}
          readinessProbe:
            tcpSocket:
              port: "{{ .Values.clusterWord }}"
            periodSeconds: {{ .Values.masterReadinessProbePeriodSeconds }}
            timeoutSeconds: {{ .Values.masterReadinessProbeTimeoutSeconds }}
            successThreshold: {{ .Values.masterReadinessProbeSuccessThreshold }}
            failureThreshold: {{ .Values.masterReadinessProbeFailureThreshold }}
          livenessProbe:
            tcpSocket:
              port: "{{ .Values.clusterWord }}"
            periodSeconds: {{ .Values.masterLivenessProbePeriodSeconds }}
            timeoutSeconds: {{ .Values.masterLivenessProbeTimeoutSeconds }}
            successThreshold: {{ .Values.masterLivenessProbeSuccessThreshold }}
            failureThreshold: {{ .Values.masterLivenessProbeFailureThreshold }}
            initialDelaySeconds: {{ .Values.masterLivenessProbeInitialDelaySeconds }}

###################################################################################################
