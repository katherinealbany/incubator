#!/bin/bash -e
set -o pipefail
[[ -n "${DEBUG}" ]] && set -x

###################################################################################################

BASE="$(dirname "${BASH_SOURCE[0]}")"

###################################################################################################

kubectl apply --record=true --wait=true --filename="${BASE}/service-account.yaml"
kubectl apply --record=true --wait=true --filename="${BASE}/cluster-role-binding.yaml"

###################################################################################################

helm init --upgrade --debug --wait --tiller-namespace '{{ if (has (datasource "data") "HELM_NAMESPACE") }}{{ (datasource "data").HELM_NAMESPACE }}{{ else }}{{ .Env.HELM_NAMESPACE }}{{ end }}' --service-account '{{ if (has (datasource "data") "HELM_SERVICE_ACCOUNT") }}{{ (datasource "data").HELM_SERVICE_ACCOUNT }}{{ else }}{{ .Env.HELM_SERVICE_ACCOUNT }}{{ end }}' --history-max '{{ if (has (datasource "data") "HELM_HISTORY_MAX") }}{{ (datasource "data").HELM_HISTORY_MAX }}{{ else }}{{ .Env.HELM_HISTORY_MAX }}{{ end }}' --replicas '{{ if (has (datasource "data") "HELM_REPLICAS") }}{{ (datasource "data").HELM_REPLICAS }}{{ else }}{{ .Env.HELM_REPLICAS }}{{ end }}'

###################################################################################################
